{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Data-table-to-barchart-test","tagline":"A quick example on how to progressively enhance a data table to become an interactive barchart","body":"<!DOCTYPE HTML>\r\n<html lang=\"en-US\">\r\n<head>\r\n\t<meta charset=\"UTF-8\">\r\n\t<title>Animated barchart from datatable example</title>\r\n\t<style>\r\n\t* {\r\n\t\tmargin: 0;\r\n\t\tpadding :0;\r\n\t\t}\r\n\tnav,output {\r\n\t\tdisplay: block;\r\n\t\t}\r\n\tbody {\r\n\t\tpadding: 2em;\r\n\t\tfont-family: \"Open Sans\", arial, sans-serif;\r\n\t\t}\r\n\th1 {\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 20px;\r\n\t\t}\r\n\th1 span {\r\n\t\tdisplay: block;\r\n\t\tcolor: #999;\r\n\t\tfont-size: 12px;\r\n\t\t}\t\r\n\tnav {\r\n\t\tfloat:left;\r\n\t\tpadding-right:20px;\r\n\t\t}\r\n\tbutton {\r\n\t\tpadding: 5px 10px;\r\n\t\tfont-size: 14px;\r\n\t\twidth: 9em;\r\n\t\tborder: none;\r\n\t\tmargin-bottom: 5px;\r\n\t\tbackground: #ccc;\r\n\t\tbackground: -webkit-linear-gradient(#ccc, #eee);\r\n\t\tbackground: -moz-linear-gradient(#ccc, #eee);\r\n\t\tbackground: -ms-linear-gradient(#ccc, #eee);\r\n\t\tbackground: -o-linear-gradient(#ccc, #eee);\r\n\t\tbackground: linear-gradient(#ccc, #eee);\r\n\t\t}\r\n\tbutton.current {\r\n\t\tbackground: #6cf;\r\n\t\tbackground: -webkit-linear-gradient(#369, #6cf);\r\n\t\tbackground: -moz-linear-gradient(#369, #6cf);\r\n\t\tbackground: -ms-linear-gradient(#369, #6cf);\r\n\t\tbackground: -o-linear-gradient(#369, #6cf);\r\n\t\tbackground: linear-gradient(#369, #6cf);\r\n\t\t}\r\n\t.resultbars {\r\n\t\tpadding-top: 30px;\r\n\t\t}\r\n\t.progress {\r\n\t\tfloat: left;\r\n\t\twidth: 236px;\r\n\t\theight: 1em;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tbackground: -webkit-linear-gradient(#ccc, #eee);\r\n\t\tbackground: -moz-linear-gradient(#ccc, #eee);\r\n\t\tbackground: -ms-linear-gradient(#ccc, #eee);\r\n\t\tbackground: -o-linear-gradient(#ccc, #eee);\r\n\t\tbackground: linear-gradient(#ccc, #eee);\r\n\t}\r\n\tmeter, progress {\r\n\t\twidth: 236px;\r\n\t}\r\n\t.resultbars li {\r\n\t\tlist-style: none;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0 0 5px 0;\r\n \t}\r\n\t.value {\r\n\t\tpadding: 0 1em;\r\n\t}\r\n\t#graphs ul { \r\n\t\tmargin: 1em 0;\r\n\t\tlist-style: none;\r\n\t\t}\r\n\t.os {\r\n\t\tdisplay: block;\r\n\t\tfloat: left;\r\n\t\twidth: 100px;\r\n\t}\r\n\t.progress span {\r\n\t\tbackground: #060;\r\n\t\tbackground: -webkit-linear-gradient(0deg, #060, #0c0);\r\n\t\tbackground: -moz-linear-gradient(0deg, #060, #0c0);\r\n\t\tbackground: -ms-linear-gradient(0deg, #060, #0c0);\r\n\t\tbackground: -o-linear-gradient(0deg, #060, #0c0);\r\n\t\tbackground: linear-gradient(90deg, #060, #0c0);\r\n\t\twidth:20px;\r\n\t\theight:1em;\r\n\t\tdisplay: block;\r\n\t\t-webkit-transition: width 1s;\r\n\t\t-moz-transition: width 1s;\r\n\t\t-ms-transition: width 1s;\r\n\t\t-o-transition: width 1s;\r\n\t\ttransition: width 1s;\r\n\t\t}\r\n\ttable { \r\n\t\tclear: both;\r\n\t\tborder: none;\r\n\t\tborder-collapse: collapse;\r\n\t}\r\n\tthead th {\r\n\t\tborder-bottom: 2px solid #000;\r\n\t}\r\n\tth, td {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder: none;\r\n\t\tborder-collapse: collapse;\r\n\t}\r\n\ttbody td{\r\n\t\ttext-align: center;\r\n\t}\r\n\ttbody tr > th {\r\n\t\ttext-align: left;\r\n\t\tborder-right: 2px solid #000;\r\n\t}\r\n\t</style>\r\n</head>\r\n<body>\r\n<h1>\r\n\tWhat platforms are you targeting with your apps? \r\n\t<span>Answers from 590 developers</span>\r\n</h1>\r\n<div id=\"graphs\"></div>\r\n<table summary=\"Platforms targetted by developers. Winners are the web, iOS and Android in that order\" id=\"datatable\">\r\n<thead>\r\n\t<tr>\r\n\t\t<th>Platform</th>\r\n\t\t<th>Focus</th>\r\n\t\t<th>Must have</th>\r\n\t\t<th>Supported</th>\r\n\t\t<th>Sometimes</th>\r\n\t\t<th>Not at all</th>\r\n\t</tr>\r\n</thead>\r\n<tbody>\r\n\t<tr>\r\n\t\t<th>Web</th><td>370</td><td>153</td><td>33</td><td>23</td><td>11</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<th>iOS</th><td>261</td><td>207</td><td>53</td><td>28</td><td>41</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<th>Android</th><td>182</td><td>221</td><td>102</td><td>47</td><td>38</td>\r\n\t</tr>\t\r\n\t<tr>\r\n\t\t<th>Windows</th><td>10</td><td>46</td><td>131</td><td>173</td><td>230</td>\r\n\t</tr>\t\r\n\t<tr>\r\n\t\t<th>Blackberry</th><td>8</td><td>15</td><td>100</td><td>164</td><td>303</td>\r\n\t</tr>\t\r\n</tbody>\r\n</table>\r\n\r\n<script>\r\n(function(){\r\n\r\n// DOM parts\r\nvar table = document.querySelector('#datatable'),\r\n\t\tgraphs = document.querySelector('#graphs');\r\n\t\tweights = table.querySelectorAll('#datatable thead th'),\r\n\t\trows = table.querySelectorAll('tbody tr');\r\n// collections \r\nvar cells = null, bars = null, fields = null;\r\n// caches\r\nvar oldbutton = null, osname = '', i = 0, out = 0;\r\n// Brent Spiner\r\nvar dataset = {};\r\n// max amount for bars and scale for data display\r\nvar all = 590, scale = 1;\r\n\r\n// type of chart \r\nvar type = 'barcharts';\r\n\r\n// let the browser decide what works \r\nif (document.location.href.indexOf('checksupport') !== -1) {\r\n\tif (document.createElement('meter').max !== undefined) {\r\n\t\ttype = 'meter';\r\n\t} else {\r\n\t\tif (document.createElement('progress').max !== undefined) {\r\n\t\t\ttype = 'progress';\r\n\t\t} else {\r\n\t\t\ttype = 'barchars';\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvar markup = {\r\n\t'barcharts': '<li><span class=\"os\">{os}</span> '+\r\n\t\t\t\t\t\t\t '<div class=\"progress\"><span></span></div>'+\r\n\t\t\t\t\t\t\t ' <span class=\"value\">0</span></li>',\r\n\t'meter': \t\t '<li><span class=\"os\">{os}</span> '+\r\n\t\t\t\t \t     '<meter min=\"0\" max=\"' + all + '\" value=\"30\"></meter>'+\r\n\t\t\t\t\t     ' <span class=\"value\">0</span></li>',\r\n\t'progress':  '<li><span class=\"os\">{os}</span> '+\r\n\t\t\t\t\t\t\t '<progress min=\"0\" max=\"' + all + '\" value=\"30\"></progress>'+\r\n\t\t\t\t\t\t\t ' <span class=\"value\">0</span></li>'\t\t\t\r\n};\r\n\r\n// turn the data table into a massive data hash \r\ni = rows.length;\r\nwhile (i--) {\r\n\tcells = rows[i].querySelectorAll('td');\r\n\tosname = rows[i].querySelector('th')\r\n\tj = cells.length;\r\n\tdataset[osname.innerHTML] = {};\r\n\twhile (j--) {\r\n\t\tdataset[osname.innerHTML][weights[j+1].innerHTML] = +cells[j].innerHTML;\r\n\t}\r\n}\r\n\r\n// create the navigation from the table headers\r\nout = '<nav><ul>';\r\nfor (i = 1; i < weights.length; i++) {\r\n\tout += '<li><button>' + weights[i].innerHTML + '</button></li>';\r\n}\r\nout += '</ul></nav>';\r\ngraphs.innerHTML += out;\r\n\r\n// create the barcharts \r\nout = '<ul class=\"resultbars\">';\r\nfor (i in dataset) {\r\n\tout += markup[type].replace('{os}',i);\r\n}\r\nout += '</ul></nav>';\r\ngraphs.innerHTML += out;\r\n\r\n// cache the output elements \r\nif (type === 'barcharts') { bars = '.resultbars .progress span'; }\r\nif (type === 'meter')     { bars = '.resultbars meter'; }\r\nif (type === 'progress')  { bars = '.resultbars progress'; }\r\nbars = document.querySelectorAll(bars);\r\nfields = document.querySelectorAll('.resultbars .value');\r\n\r\n// getting the scale factor for the bars (not needed for meter/progress)\r\nif (type === 'barcharts') {\r\n\tscale = all / document.querySelector('.progress').offsetWidth;\r\n}\r\n\r\n// One event delegation to rule them all\r\ndocument.querySelector('#graphs nav').addEventListener('click', function(ev) {\r\n\tif (ev.target.tagName === 'BUTTON') {\r\n\t\tif (oldbutton) {\r\n\t\t\toldbutton.className = '';\r\n\t\t}\r\n\t\tev.target.className = 'current';\r\n\t\toldbutton = ev.target;\r\n\t\tvar elm = ev.target.innerHTML;\r\n\t\tout = 0;\t\t\r\n\t\tfor(i in dataset) {\r\n\t\t\tfields[out].innerHTML = dataset[i][elm];\r\n\t\t\tif (type === 'barcharts') {\r\n\t\t\t\tbars[out].style.width = dataset[i][elm]/scale + 'px';\r\n\t\t\t}\r\n\t\t\tif (type === 'meter' || type === 'progress') {\r\n\t\t\t\tbars[out].value  = dataset[i][elm];\r\n\t\t\t}\r\n\t\t\tout++;\r\n\t\t}\r\n\t}\r\n}, false);\r\n// start the show\r\ndocument.querySelector('#graphs button').click();\r\n})();\r\n</script>\r\n</body>\r\n</html>"}